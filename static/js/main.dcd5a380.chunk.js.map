{"version":3,"sources":["Mark.png","Mark_Branton_CV_2021.pdf","App.js","reportWebVitals.js","index.js"],"names":["myRainbow","require","setSpectrum","App","props","useState","document","documentElement","scrollHeight","height","setHeight","colorAt","window","pageYOffset","color","setColor","useEffect","addEventListener","Offset","setNumberRange","className","Navbar","bg","variant","expand","sticky","Container","fluid","Toggle","aria-controls","Collapse","id","Nav","Link","href","style","backgroundColor","src","Mark","fontSize","class","Row","Col","icon","faLinkedin","faGithubSquare","faEnvelope","Resume","download","faFileDownload","Timeline","position","Experience","map","Work","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Title","Company","Date","Description","Point","Tech","Projects","Project","hasOwnProperty","FrontEnd","BackEnd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","background_color","getElementById"],"mappings":"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","file":"static/js/main.dcd5a380.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mark.4e57e4dd.png\";","export default __webpack_public_path__ + \"static/media/Mark_Branton_CV_2021.2fb62bf3.pdf\";","import Mark from './Mark.png';\nimport Resume from './Mark_Branton_CV_2021.pdf';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Projects from './projects.json'\nimport Experience from './experience.json'\nimport { Navbar, Nav, Row, Col, Container } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithubSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope, faFileDownload } from '@fortawesome/free-solid-svg-icons'\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\n\nvar Rainbow = require('rainbowvis.js');\nvar myRainbow = new Rainbow();\nmyRainbow.setSpectrum('skyblue', 'darkcyan', 'darkgreen', 'yellowgreen', 'darkgoldenrod', 'darkorange')\n\nfunction App(props) {\n\n  const [height, setHeight] = useState(document.documentElement.scrollHeight);\n  const [color, setColor] = useState(\"#\" + myRainbow.colorAt(window.pageYOffset));\n\n  useEffect(() => {\n    function updateColorOnScroll(Offset){\n      return \"#\" + myRainbow.colorAt(Offset);\n    }\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"scroll\", () =>\n        setColor(updateColorOnScroll(window.pageYOffset))\n      );\n      window.addEventListener(\"load\", () =>\n        setHeight(document.documentElement.scrollHeight),\n        myRainbow.setNumberRange(0, height)\n      );\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Container fluid>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#about\">About</Nav.Link>\n              <Nav.Link href=\"#experience\">Experience</Nav.Link>\n              <Nav.Link href=\"#projects\">Projects</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <header className=\"App-header\" style={{backgroundColor: color}} id=\"home\">\n        <img src={Mark} className=\"App-logo\"/>\n        <br></br>\n        <h1 style={{fontSize: \"200%\"}}>Mark Branton</h1>\n      </header>\n      <div class=\"screen\" style={{backgroundColor: color}}>\n        <div style={{fontSize: \"250%\"}}>\n          <Container fluid>\n            <Row>\n              <Col>\n                <a style={{color: \"white\"}} href=\"https://www.linkedin.com/in/mark-branton-54b509175/\"><FontAwesomeIcon icon={faLinkedin}></FontAwesomeIcon></a>\n              </Col>\n              <Col>\n                <a style={{color: \"white\"}} href=\"https://github.com/MarkBranton1999\"><FontAwesomeIcon icon={faGithubSquare}></FontAwesomeIcon></a>\n              </Col>\n              <Col>\n                <a style={{color: \"white\"}} href=\"mailto: markbranton99@gmail.com\"><FontAwesomeIcon icon={faEnvelope}></FontAwesomeIcon></a>\n              </Col>\n              <Col>\n                <a style={{color: \"white\"}} href={Resume} download=\"Mark_Branton_CV.pdf\"><FontAwesomeIcon icon={faFileDownload}></FontAwesomeIcon></a>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <div id=\"about\">\n          <br></br>\n          <h1>About</h1>\n          <br></br>\n          <div>\n            I am a 4th year computer engineering student at the University of Waterloo who is always looking for new job opportunities.\n          </div>\n          <div>\n            I am mainly looking for web development jobs.\n            Please do not hesitate to reach out to me with job opportunities.\n          </div>\n        </div>\n        <br></br>\n        <div id=\"experience\">\n          <br></br>\n          <h1>\n            Experience\n          </h1>\n          <br></br>\n          <Timeline position=\"alternate\">\n            {Experience.map((Work) => {\n              return (<TimelineItem>\n                <TimelineSeparator>\n                  <TimelineDot />\n                <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                  <h3>{Work.Title}</h3>\n                  <br></br>\n                  <h4>{Work.Company}</h4>\n                  <br></br>\n                  <h5>{Work.Date}</h5>\n                  <br></br>\n                  <ul>\n                    {Work.Description.map((Point) => {\n                      return (<li>{Point}</li>);\n                    })}\n                  </ul>\n                  <br></br>\n                  Technologies Used: {Work.Tech}\n                </TimelineContent>\n              </TimelineItem>);\n            })}\n          </Timeline>\n        </div>\n        <br></br>\n        <div id=\"projects\">\n          <br></br>\n          <h1>\n            Projects\n          </h1>\n          <br></br>\n          {Projects.map((Project) => {\n            return (<div>\n              <h2>{Project.Title}</h2>\n              <br></br>\n              <p>{Project.Description}</p>\n              <br></br>\n              {Project.hasOwnProperty('FrontEnd')? <div><a class=\"btn btn-primary\" href={Project.FrontEnd}>Click to see front end code</a><br/></div>: <div></div>}\n              {Project.hasOwnProperty('BackEnd')? <div><a class=\"btn btn-primary\" href={Project.BackEnd}>Click to see back end code</a><br/></div>: <div></div>}\n            </div>);\n          })}\n          <br/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App background_color=\"#2c3e50\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}